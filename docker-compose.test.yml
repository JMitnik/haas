# Test: Uses development docker-file and a test-runner in the api/command

version: '3.5'
services:
  postgres:
    restart: always

    image: postgres:10.3
    environment:
      POSTGRES_USER: prisma
      POSTGRES_PASSWORD: prisma
    ports:
      - '5435:5432'
  
  frontends:
    image: node:13.12.0-alpine
    tty: true
    ports:
      - '3000:3000'
      - '3002:3002'
    working_dir: /usr/src/app
    volumes:
      - './node_modules:/usr/src/app/node_modules'
      - './package.json:/usr/src/app/package.json'
      - './frontend:/usr/src/app/frontend:delegated'
    command: 'sh'

  api:
    build: 
      context: .
      dockerfile: container/dev.Dockerfile
    ports:
      - '4000:4000'
    env_file:
      - api/.env
    environment: 
      DB_STRING: 'postgresql://prisma:prisma@postgres:5432/postgres?schema=public'
    volumes:
        - './api/src:/app/src'
        - './api/schema.prisma:/app/schema.prisma'
        - './api/migrations:/app/migrations'
    depends_on: 
      - postgres
    command: sh -c './wait-for-it.sh postgres:5432 && npx prisma migrate up --experimental && (npx ts-node -s src/scripts/seed-db.ts) && (npx tsnd --exit-child --transpile-only -- ./src/app.ts)'