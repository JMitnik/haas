# import *, Query, Mutation from './generated/prisma.graphql'

type Query {
    newSessionId: String
    getQuestionnaireData(topicId: String): QuestionnaireDetailResult!
}

type Mutation {
    uploadUserSession(uploadUserSessionInput: UploadUserSessionInput): Session!
    createNewCustomer(name: String, options: CustomerCreateOptions): Customer!
    deleteFullCustomer(id: ID!): Customer!
    createNewQuestionnaire(customerId: String, title: String, publicTitle: String, description: String, isSeed: Boolean): Questionnaire!
    updateTopicBuilder(id: String, topicData: TopicDataEntry): String!
}

input TopicDataEntry {
    id: String
    questions: [QuestionInput]
}

input LeafNodeInput {
    id: String
    nodeId: String
    type: String
    title: String
}

input QuestionConditionInput {
    id: String
    conditionType: String
    renderMin: Int
    renderMax: Int
    matchValue: String
}

input EdgeNodeInput {
    id: String
    title: String
}

input EdgeChildInput {
    id: String
    conditions: [QuestionConditionInput]
    parentNode: EdgeNodeInput
    childNode: EdgeNodeInput
}

input OptionInput {
    id: String
    value: String
    publicValue: String
}

input QuestionInput {
    id: String
    title: String!
    isRoot: Boolean!
    isLeaf: Boolean!
    type: NodeType!
    overrideLeaf: LeafNodeInput
    options: [OptionInput] 
    children: [EdgeChildInput] 
}

input UserSessionEntryInput {
    nodeId: String!
    edgeId: String
    depth: Int
    data: UserSessionEntryDataInput!
}

input UserSessionEntryDataInput {
    textValue: String
    numberValue: Int
    multiValues: [UserSessionEntryDataInput!]
}

input UploadUserSessionInput {
    questionnaireId: String!
    entries: [UserSessionEntryInput!]!
}

type QuestionnaireDetailResult {
    customerName: String!
    title: String!
    description: String!
    creationDate: String!
    updatedAt: String!
    average: String!
    totalNodeEntries: Int!
    timelineEntries: [UniqueDataResultEntry]
}

type UniqueDataResultEntry {
    sessionId: String!
    value: Int!
    createdAt: String!
}

input CustomerCreateOptions {
    isSeed: Boolean
    logo: String
    primaryColour: String
}
